with "@UTIL_DIR@config";
with "@UTIL_DIR@utilada_sys";
with "@UTIL_DIR@utilada_unit";
with "@UTIL_DIR@utilada_http";
with "@SERVLET_DIR@servletada";
with "@SECURITY_DIR@security";
with "swagger";
with "swagger_server";
with "testapi_model";
@WITH_SERVLET_EWS@
@WITH_SERVLET_AWS@
project TestAPI_Server is

   for Main use ();
   for Source_Dirs use ("regtests/server/src", "regtests/server/src/server");
   for Object_Dir use "./" & Config'Exec_Dir & "/obj";
   for Excluded_Source_Files use ("testapi.ads", "testbinary.ads");
   for Exec_Dir use "./" & Config'Exec_Dir & "/bin";
   
   Build_AWS : Config.Yes_No := external ("BUILD_AWS", "@OPENAPI_HAVE_AWS@");
   Build_EWS : Config.Yes_No := external ("BUILD_EWS", "@OPENAPI_HAVE_EWS@");
   
   case Build_AWS is
      when "yes" =>
         for Main use Project'Main & ("testapi_aws.adb");
         for Source_Dirs use Project'Source_Dirs & ("regtests/server/src/aws");

      when others =>
         null;
   end case;

   case Build_EWS is
      when "yes" =>
         for Main use Project'Main & ("testapi_ews.adb");
         for Source_Dirs use Project'Source_Dirs & ("regtests/server/src/ews");

      when others =>
         null;
   end case;

   package Binder renames Config.Binder;
   package Builder renames Config.Builder;
   package Compiler is
      --  Disable some comment style checks to avoid several warnings in generated files.
      for Default_Switches ("Ada") use Config.Compiler'Default_Switches ("Ada") & ("-gnatyN", "-gnatwU");
   end compiler;
   package Linker renames Config.Linker;

end TestAPI_Server;

