--  REST API types validation
--  Types to validate
--
--  The version of the OpenAPI document: 1.0.0
--
--
--  NOTE: This package is auto generated by OpenAPI-Generator 7.11.0-2024-11-24.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
pragma Warnings (Off, "*no entities of*are referenced");
with OpenAPI.Servers;
with Types.Models;
with Security.Permissions;
package Types.Skeletons is
   pragma Style_Checks ("-bmrIu");
   pragma Warnings (Off, "*use clause for package*");
   use Types.Models;
   type Server_Type is limited interface;

   --
   procedure Add_Rack
     (Server    : in out Server_Type;
      Rack_Info : in     RackInfo_Type;
      Result    :    out Types.Models.RackInfo_Type;
      Context   : in out OpenAPI.Servers.Context_Type) is abstract;

   --
   procedure Get_Rack
     (Server  : in out Server_Type;
      Name    : in     OpenAPI.Long;
      Result  :    out Types.Models.RackInfo_Type;
      Context : in out OpenAPI.Servers.Context_Type) is abstract;

   --
   procedure Update_Rack
     (Server    : in out Server_Type;
      Name      : in     OpenAPI.Long;
      Rack_Info : in     RackInfo_Type;
      Result    :    out Types.Models.RackInfo_Type;
      Context   : in out OpenAPI.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Skeleton is

      procedure Register
        (Server : in out OpenAPI.Servers.Application_Type'Class);

      --
      procedure Add_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

      --
      procedure Get_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

      --
      procedure Update_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Shared_Instance is

      procedure Register
        (Server : in out OpenAPI.Servers.Application_Type'Class);

      --
      procedure Add_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

      --
      procedure Get_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

      --
      procedure Update_Rack
        (Req     : in out OpenAPI.Servers.Request'Class;
         Reply   : in out OpenAPI.Servers.Response'Class;
         Stream  : in out OpenAPI.Servers.Output_Stream'Class;
         Context : in out OpenAPI.Servers.Context_Type);

   private
      protected Server is

         --
         procedure Add_Rack
           (Rack_Info : in     RackInfo_Type;
            Result    :    out Types.Models.RackInfo_Type;
            Context   : in out OpenAPI.Servers.Context_Type);

         --
         procedure Get_Rack
           (Name    : in     OpenAPI.Long;
            Result  :    out Types.Models.RackInfo_Type;
            Context : in out OpenAPI.Servers.Context_Type);

         --
         procedure Update_Rack
           (Name      : in     OpenAPI.Long;
            Rack_Info : in     RackInfo_Type;
            Result    :    out Types.Models.RackInfo_Type;
            Context   : in out OpenAPI.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end Types.Skeletons;
