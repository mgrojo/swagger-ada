--  REST API Validation
--  API to validate
--
--  The version of the OpenAPI document: 1.0.0
--  Contact: Stephane.Carrez@gmail.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.0.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

package body TestAPI.Clients is

   --
   --  Query an orchestrated service instance
   procedure Orch_Store
      (Client : in out Client_Type;
       Inline_Object_3Type : in TestAPI.Models.InlineObject3_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin

      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      TestAPI.Models.Serialize (Req.Stream, "", Inline_Object_3Type);

      URI.Set_Path ("/orchestration");
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Orch_Store;

   --  Create a ticket
   procedure Do_Create_Ticket
      (Client : in out Client_Type;
       Title : in Swagger.UString;
       Owner : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
   begin

      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      Req.Stream.Write_Entity ("owner", Owner);
      Req.Stream.Write_Entity ("status", Status);
      Req.Stream.Write_Entity ("title", Title);
      Req.Stream.Write_Entity ("description", Description);

      URI.Set_Path ("/tickets");
      Client.Call (Swagger.Clients.POST, URI, Req);
   end Do_Create_Ticket;

   --  Delete a ticket
   procedure Do_Delete_Ticket
      (Client : in out Client_Type;
       Tid : in Swagger.Long) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/tickets/{tid}");
      URI.Set_Path_Param ("tid", Swagger.To_String (Tid));
      Client.Call (Swagger.Clients.DELETE, URI);
   end Do_Delete_Ticket;

   --  List the tickets
   procedure Do_Head_Ticket
      (Client : in out Client_Type) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Set_Path ("/tickets");
      Client.Call (Swagger.Clients.HEAD, URI);
   end Do_Head_Ticket;

   --  Patch a ticket
   procedure Do_Patch_Ticket
      (Client : in out Client_Type;
       Tid : in Swagger.Long;
       Owner : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Title : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Result : out TestAPI.Models.Ticket_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      Req.Stream.Write_Entity ("owner", Owner);
      Req.Stream.Write_Entity ("status", Status);
      Req.Stream.Write_Entity ("title", Title);
      Req.Stream.Write_Entity ("description", Description);

      URI.Set_Path ("/tickets/{tid}");
      URI.Set_Path_Param ("tid", Swagger.To_String (Tid));
      Client.Call (Swagger.Clients.PATCH, URI, Req, Reply);
      TestAPI.Models.Deserialize (Reply, "", Result);
   end Do_Patch_Ticket;

   --  Update a ticket
   procedure Do_Update_Ticket
      (Client : in out Client_Type;
       Tid : in Swagger.Long;
       Owner : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Title : in Swagger.Nullable_UString;
       Description : in Swagger.Nullable_UString;
       Result : out TestAPI.Models.Ticket_Type) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_FORM));
      Req.Stream.Write_Entity ("owner", Owner);
      Req.Stream.Write_Entity ("status", Status);
      Req.Stream.Write_Entity ("title", Title);
      Req.Stream.Write_Entity ("description", Description);

      URI.Set_Path ("/tickets/{tid}");
      URI.Set_Path_Param ("tid", Swagger.To_String (Tid));
      Client.Call (Swagger.Clients.PUT, URI, Req, Reply);
      TestAPI.Models.Deserialize (Reply, "", Result);
   end Do_Update_Ticket;

   --  Get a ticket
   --  Get a ticket
   procedure Do_Get_Ticket
      (Client : in out Client_Type;
       Tid : in Swagger.Long;
       Result : out TestAPI.Models.Ticket_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/tickets/{tid}");
      URI.Set_Path_Param ("tid", Swagger.To_String (Tid));
      Client.Call (Swagger.Clients.GET, URI, Reply);
      TestAPI.Models.Deserialize (Reply, "", Result);
   end Do_Get_Ticket;

   --  List the tickets
   --  List the tickets created for the project.
   procedure Do_List_Tickets
      (Client : in out Client_Type;
       Status : in Swagger.Nullable_UString;
       Owner : in Swagger.Nullable_UString;
       Result : out TestAPI.Models.Ticket_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("status", Status);
      URI.Add_Param ("owner", Owner);
      URI.Set_Path ("/tickets");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      TestAPI.Models.Deserialize (Reply, "", Result);
   end Do_List_Tickets;

   --  Get a ticket
   --  Get a ticket
   procedure Do_Options_Ticket
      (Client : in out Client_Type;
       Tid : in Swagger.Long;
       Result : out TestAPI.Models.Ticket_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/tickets/{tid}");
      URI.Set_Path_Param ("tid", Swagger.To_String (Tid));
      Client.Call (Swagger.Clients.OPTIONS, URI, Reply);
      TestAPI.Models.Deserialize (Reply, "", Result);
   end Do_Options_Ticket;
end TestAPI.Clients;
