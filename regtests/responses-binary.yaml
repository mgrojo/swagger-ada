openapi: 3.0.0
servers:
  - url: 'https://localhost:8082/v1'
  - url: 'http://localhost:8082/v1'
info:
  description: API to validate
  version: 1.0.0
  title: REST API Validation
  termsOfService: 'https://github.com/terms/'
  contact:
    email: Stephane.Carrez@gmail.com
  license:
    name: Apache Licence
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /binary:
    get:
      summary: Get an image
      description: |
        Get an image
      operationId: do_get_image
      parameters:
        - name: status
          in: query
          description: The image status
          required: false
          schema:
            $ref: '#/components/schemas/Status'
        - name: owner
          in: query
          description: The owner
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
                description: Request limit per hour.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: Invalid status value
  /external/{status}:
    get:
      summary: Get some stat from external struct
      operationId: do_get_stats
      parameters:
        - name: status
          in: path
          description: status information
          required: true
          schema:
            $ref: '#/components/schemas/Status'
      responses:
        '200':
          description: successful operation
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
                description: Request limit per hour.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stat'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stat'
        '404':
          description: Invalid status value
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Status:
      type: string
      enum:
        - open
        - onhold
        - assigned
        - closed
        - rejected
    Stat:
      type: object
      properties:
        count:
           type: integer
           format: int64
        name:
           type: string
      x-ada-type-name: "External.Stat_Type"
      x-ada-vector-type-name: "External.Stat_Vector"
